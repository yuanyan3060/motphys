/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_distancejointthreejs_free(a: number): void;
export function __wbg_get_distancejointthreejs_id1(a: number): number;
export function __wbg_set_distancejointthreejs_id1(a: number, b: number): void;
export function __wbg_get_distancejointthreejs_id2(a: number): number;
export function __wbg_set_distancejointthreejs_id2(a: number, b: number): void;
export function __wbg_get_distancejointthreejs_local_pos1(a: number): number;
export function __wbg_set_distancejointthreejs_local_pos1(a: number, b: number): void;
export function __wbg_get_distancejointthreejs_local_pos2(a: number): number;
export function __wbg_set_distancejointthreejs_local_pos2(a: number, b: number): void;
export function __wbg_get_distancejointthreejs_rest_length(a: number): number;
export function __wbg_set_distancejointthreejs_rest_length(a: number, b: number): void;
export function distancejointthreejs_new(a: number, b: number): number;
export function distancejointthreejs_with_length(a: number, b: number): number;
export function distancejointthreejs_with_local_pos1(a: number, b: number): number;
export function distancejointthreejs_with_local_pos2(a: number, b: number): number;
export function distancejointthreejs_apply(a: number, b: number, c: number): void;
export function __wbg_vec3_free(a: number): void;
export function vec3_new(a: number, b: number, c: number): number;
export function vec3_cross(a: number, b: number): number;
export function vec3_length(a: number): number;
export function __wbg_quaternion_free(a: number): void;
export function __wbg_get_quaternion_w(a: number): number;
export function __wbg_set_quaternion_w(a: number, b: number): void;
export function __wbg_get_quaternion_x(a: number): number;
export function __wbg_set_quaternion_x(a: number, b: number): void;
export function __wbg_get_quaternion_y(a: number): number;
export function __wbg_set_quaternion_y(a: number, b: number): void;
export function __wbg_get_quaternion_z(a: number): number;
export function __wbg_set_quaternion_z(a: number, b: number): void;
export function __wbg_set_vec3_x(a: number, b: number): void;
export function __wbg_set_vec3_y(a: number, b: number): void;
export function __wbg_set_vec3_z(a: number, b: number): void;
export function __wbg_get_vec3_x(a: number): number;
export function __wbg_get_vec3_y(a: number): number;
export function __wbg_get_vec3_z(a: number): number;
export function __wbg_rigidbody_free(a: number): void;
export function __wbg_get_rigidbody_position(a: number): number;
export function __wbg_set_rigidbody_position(a: number, b: number): void;
export function __wbg_get_rigidbody_mass(a: number): number;
export function __wbg_set_rigidbody_mass(a: number, b: number): void;
export function __wbg_get_rigidbody_body_type(a: number): number;
export function __wbg_set_rigidbody_body_type(a: number, b: number): void;
export function __wbg_get_rigidbody_quaternion(a: number): number;
export function __wbg_set_rigidbody_quaternion(a: number, b: number): void;
export function __wbg_get_rigidbody_force(a: number): number;
export function __wbg_set_rigidbody_force(a: number, b: number): void;
export function __wbg_get_rigidbody_torque(a: number): number;
export function __wbg_set_rigidbody_torque(a: number, b: number): void;
export function rigidbody_new_box(a: number, b: number): number;
export function rigidbody_with_position(a: number, b: number): number;
export function rigidbody_with_velocity(a: number, b: number): number;
export function rigidbody_with_type(a: number, b: number): number;
export function rigidbody_update(a: number, b: number): void;
export function rigidbody_local_position_2_world(a: number, b: number): number;
export function rigidbody_apply_force(a: number, b: number, c: number): void;
export function rigidbody_reset_force(a: number): void;
export function __wbg_boxes_free(a: number): void;
export function __wbg_get_boxes_half_width(a: number): number;
export function __wbg_set_boxes_half_width(a: number, b: number): void;
export function __wbg_get_boxes_half_height(a: number): number;
export function __wbg_set_boxes_half_height(a: number, b: number): void;
export function __wbg_get_boxes_half_depth(a: number): number;
export function __wbg_set_boxes_half_depth(a: number, b: number): void;
export function boxes_new(a: number, b: number, c: number): number;
export function boxes_cube(a: number): number;
